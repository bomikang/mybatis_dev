<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace:인터페이스 경로.클래스이름 -->
<mapper namespace="kr.or.dgit.bigdata.mybatis_dev.mappers.StudentMapper">

	<select id="findStudentById" parameterType="int" resultType="Student">
		select stud_id, name, email, phone, dob from students where stud_id = #{studId};
	</select>
	
	<insert id="insertStudent" parameterType="Student">
		insert into students(stud_id, name, email, phone, dob)
		values(#{studId}, #{name}, #{email}, #{phone}, #{dob});
	</insert>
	
	<insert id="insertStudentAutoInc" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
		insert into students(name, email, phone, dob) values( #{name}, #{email}, #{phone}, #{dob});
	</insert>
	
	<update id="updateStudent" parameterType="Student">
		update students set name=#{name}, email=#{email}, phone=#{phone}, dob=#{dob} where stud_id = #{studId};
	</update>
	
	<delete id="deleteStudent" parameterType="int" >
		delete from students where stud_id=#{studId};
	</delete>
	
	<select id="findAllStudents" resultType="Student">
		select stud_id as studId, name, email, phone, dob from students;
	</select>
	
	<select id="findStudentByIdForMap" parameterType="int" resultType="map">
       select stud_id, name, email, phone, dob from students where stud_id = #{studId};
 	</select>
 	
 	<select id="findAllStudentsForMap" resultType="map">
		select stud_id , name, email, phone, dob from students;
 	</select>
 	
 	<!-- address 생성 이후 추가되는 태그 -->
 	<!-- 1회용 -->
 	<resultMap id="stdWithAddressRes" type="Student">
		<id property="studId" column="stud_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="dob" column="dob" />
		<result property="address.addrId" column="addr_id" />
		<result property="address.street" column="street" />
		<result property="address.city" column="city" />
		<result property="address.state" column="state" />
		<result property="address.zip" column="zip" />
		<result property="address.country" column="country" />
	</resultMap>
 	
 	<select id="selectStudentWithAddress" parameterType="int" resultMap="stdWithAddressRes">
 		select stud_id, name, email, phone, a.addr_id, street, city, state, zip, country 
		from students s left outer join addresses a on s.addr_id = a.addr_id 
		where stud_id = #{studId};
	</select>
 	
 	<!-- 추천방법 -->
 	<resultMap id="StudentWithAddressResult" type="Student">
 		<id property="studId" column="stud_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="dob" column="dob" />
		<association property="address" resultMap="kr.or.dgit.bigdata.mybatis_dev.mappers.AddressMapper.AddrRes"></association>
 	</resultMap>
 	
 	<select id="selectStudentWithAddressResult" parameterType="int" resultMap="StudentWithAddressResult">
 		select stud_id, name, email, phone, a.addr_id, street, city, state, zip, country 
		from students s left outer join addresses a on s.addr_id = a.addr_id 
		where stud_id = #{studId};
	</select>
	
	<update id="updateSetStudent" parameterType="Student">
		update students
		<set>
			<if test="name != null">name=#{name},</if>
			<if test="email != null">email=#{email},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="dob != null">dob=#{dob},</if>
		</set>
		where stud_id = #{studId}
	</update>
</mapper>